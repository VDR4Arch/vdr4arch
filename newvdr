#!/usr/bin/python3
# newvdr - Helper script to spread the VDR version number to plugin PKGBUILDs
# Copyright (C) 2025 Manuel Reimer <manuel.reimer@gmx.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

import re
import subprocess

VDRPKGBUILD = 'vdr/PKGBUILD'
PLUGINSPATH = 'plugins'

# Read VDR's API version
with open(VDRPKGBUILD, encoding="utf-8") as fh:
    for line in fh:
        if match := re.match(r"_vdrapi=(\d+)", line):
            vdrversion = match.group(1)
            break
    else:
        raise Exception(f"Can't read vdr-api from '{VDRPKGBUILD}'")

# Loop over the plugins
with open("repo-make.conf", encoding="utf-8") as fh:
    plugindirs = [x.strip() for x in fh if x.startswith(f"{PLUGINSPATH}/")]
counter = 0;
for idx, plugindir in enumerate(plugindirs):

    # Read full plugin PKGBUILD content
    with open(f"{plugindir}/PKGBUILD", encoding="utf-8") as fh:
        pkgbuildcontent = fh.read()

    # Parse out variables
    vdrapi = re.search(r"^_vdrapi=(.+)",
                       pkgbuildcontent, flags=re.MULTILINE).group(1)
    pkgrel = int(re.search(r"^pkgrel=(\d+)",
                           pkgbuildcontent, flags=re.MULTILINE).group(1))

    # Anything to do for us?
    if vdrapi == vdrversion:
        continue

    # Count up pkgrel
    pkgrel += 1

    # Edit PKGBUILD content
    pkgbuildcontent = re.sub(r"^_vdrapi=.+$", rf"_vdrapi={vdrversion}",
                             pkgbuildcontent, flags=re.MULTILINE)
    pkgbuildcontent = re.sub(r"^pkgrel=.+$", rf"pkgrel={pkgrel}",
                             pkgbuildcontent, flags=re.MULTILINE)

    # Write out changes
    with open(f"{plugindir}/PKGBUILD", "w", encoding="utf-8") as fh:
        fh.write(pkgbuildcontent)

    # Create .SRCINFO
    print(f"Create {plugindir}/.SRCINFO ({idx+1}/{len(plugindirs)})")
    srcinfocontent = subprocess.check_output(
        ["makepkg", "-D", plugindir, "--printsrcinfo"]).decode()
    with open(f"{plugindir}/.SRCINFO", "w", encoding="utf-8") as fh:
        fh.write(srcinfocontent)

    # Count up
    counter += 1;

if counter > 1:
    print(f"Successfully edited {counter} PKGBUILDs")
    print("Don't forget to review the automatic changes via 'git diff'!")
else:
    print("Nothing to do!")
